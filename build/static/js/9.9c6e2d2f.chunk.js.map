{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/attendance/Attendance_manual.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","getBadge","status","Manual_attendance","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","setSearch","usersData","JSON","parse","localStorage","getItem","handleClick","e","console","log","useEffect","xl","lg","className","type","placeholder","autoComplete","onChange","target","items","fields","key","_classes","hover","striped","itemsPerPage","activePage","clickableRows","scopedSlots","item","color","onClick","onActivePageChange","newPage","pages","Math","round","doubleArrows","align"],"mappings":"4KAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,uJKmBhGC,EAAW,SAACC,GAChB,OAAQA,GACN,IAAK,SACH,MAAO,UACT,IAAK,WACH,MAAO,WA6GEC,UAzGW,WACxB,IAAMC,EAAUC,cACVC,EAAYC,cAAcC,OAAOC,MAAM,gBAAiB,IACxDC,EAAcC,OAAOL,GAAaA,EAAU,GAAKA,EAAU,GAAK,GACtE,EAAwBM,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOJ,EAAP,KAAeO,EAAf,KAEMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAUlD,SAASC,EAAYC,GACd,UAALA,EACIC,QAAQC,IAAI,mBACZD,QAAQC,IAAI,qBAElB,OATAC,qBAAU,WACRf,IAAgBG,GAAQC,EAAQJ,KAC/B,CAACA,EAAaG,IAQf,cAAC,IAAD,UACE,cAAC,IAAD,CAAMa,GAAI,GAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,cAAC,IAAD,CAAaC,UAAU,IAAvB,SACE,cAAC,IAAD,CACEC,KAAK,OACLC,YAAY,SACZC,aAAa,QACb5C,MAAOqB,EACPwB,SAAU,SAACV,GACTP,EAAUO,EAAEW,OAAO9C,mBAc/B,eAAC,IAAD,WACE,cAAC,IAAD,CACE+C,MAAOlB,EACPmB,OAAQ,CACN,CAAEC,IAAK,OAAQC,SAAU,oBAEzB,OACA,UAEFC,OAAK,EACLC,SAAO,EACPC,aAAc,GACdC,WAAY5B,EACZ6B,eAAa,EAIbC,YAAa,CACXzC,OAAQ,SAAC0C,GAAD,OACN,6BACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,MAAO5C,EAAS2C,EAAK1C,QAA7B,SACG0C,EAAK1C,WAGV,eAAC,IAAD,WACE,cAAC,IAAD,CAAe4C,QAAS,kBAAMzB,EAAY,WAA1C,oBAGA,cAAC,IAAD,CAAeyB,QAAS,kBAAMzB,EAAY,aAA1C,kCAUZ,cAAC,IAAD,CACEoB,WAAY5B,EACZkC,mBArFO,SAACC,GAClBtC,IAAgBsC,GACd5C,EAAQlB,KAAR,uCAA6C8D,KAoFrCC,MAAOC,KAAKC,MAAMnC,EAAUhD,OAAS,IACrCoF,cAAc,EACdC,MAAM","file":"static/js/9.9c6e2d2f.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CInput,\n} from \"@coreui/react\";\nimport \"../dashboard/dashboard.css\";\n\nconst getBadge = (status) => {\n  switch (status) {\n    case \"Active\":\n      return \"success\";\n    case \"Inactive\":\n      return \"danger\";\n  }\n};\n\nconst Manual_attendance = () => {\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n\n  const usersData = JSON.parse(localStorage.getItem(\"users\"));\n  const pageChange = (newPage) => {\n    currentPage !== newPage &&\n      history.push(`/manual_mark_attendance?page=${newPage}`);\n  };\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n\n  function handleClick(e) {\n    e == \"active\"\n      ? console.log(\"active pressed!\")\n      : console.log(\"inactive pressed!\");\n  }\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <CCard>\n          <CCardHeader>\n            <CRow>\n              <CCol>Users</CCol>\n              <CCol lg={4}>\n                <CInputGroup className=\"m\">\n                  <CInput\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    autoComplete=\"seach\"\n                    value={search}\n                    onChange={(e) => {\n                      setSearch(e.target.value);\n                    }}\n                  />\n                  {/* <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-search\"/>\n                    </CInputGroupText>\n                  </CInputGroupPrepend> */}\n                </CInputGroup>\n              </CCol>\n            </CRow>\n\n            {/* <small className=\"text-muted\"> table</small> */}\n          </CCardHeader>\n          <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={[\n                { key: \"name\", _classes: \"font-weight-bold\" },\n                // \"registered\",\n                \"role\",\n                \"status\",\n              ]}\n              hover\n              striped\n              itemsPerPage={20}\n              activePage={page}\n              clickableRows\n              // onRowClick={(item) =>\n              //   user ? history.push(`/manual_mark_attendance/${item.id}`) : null\n              // }\n              scopedSlots={{\n                status: (item) => (\n                  <td>\n                    <CDropdown>\n                      <CDropdownToggle>\n                        <CBadge color={getBadge(item.status)}>\n                          {item.status}\n                        </CBadge>\n                      </CDropdownToggle>\n                      <CDropdownMenu>\n                        <CDropdownItem onClick={() => handleClick(\"active\")}>\n                          Active\n                        </CDropdownItem>\n                        <CDropdownItem onClick={() => handleClick(\"inactive\")}>\n                          Inactive\n                        </CDropdownItem>\n                        {/* <CDropdownItem>Another Action</CDropdownItem> */}\n                      </CDropdownMenu>\n                    </CDropdown>\n                  </td>\n                ),\n              }}\n            />\n            <CPagination\n              activePage={page}\n              onActivePageChange={pageChange}\n              pages={Math.round(usersData.length / 20)}\n              doubleArrows={false}\n              align=\"center\"\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Manual_attendance;\n"],"sourceRoot":""}
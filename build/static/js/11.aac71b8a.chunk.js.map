{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pages/register/AddnewUser.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","AddnewUser","useState","firstName","setFirstName","familyName","setFamilyName","email","setEmail","phone","setPhone","role","setRole","image","setImage","className","md","lg","xl","type","placeholder","autoComplete","onChange","e","target","col","xs","id","files","color","block","onClick","preventDefault","addEmployee"],"mappings":"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","file":"static/js/11.aac71b8a.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CLabel,\n  CFormGroup,\n  CInputFile,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { addEmployee } from \"src/Auth\";\n\nconst AddnewUser = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [familyName, setFamilyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  //On-submit-handler\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    addEmployee(familyName, firstName, email, phone, role, image);\n  };\n\n  return (\n    <CContainer>\n      <CRow className=\"justify-content-center\">\n        <CCol md=\"9\" lg=\"7\" xl=\"6\">\n          <CCard className=\"mx-4\">\n            <CCardBody className=\"p-4\">\n              <CForm>\n                <h1>Add a new emplyee</h1>\n                <p className=\"text-muted\">Create new employee</p>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-user\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                    placeholder=\"Fisrt Name\"\n                    autoComplete=\"first_name\"\n                    onChange={(e) => {\n                      setFirstName(e.target.value);\n                    }}\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-user\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                    placeholder=\"Familly Name\"\n                    autoComplete=\"familly_name\"\n                    onChange={(e) => {\n                      setFamilyName(e.target.value);\n                    }}\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>@&nbsp;</CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    autoComplete=\"email\"\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>R&nbsp;&nbsp;</CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                    placeholder=\"Role\"\n                    autoComplete=\"role\"\n                    onChange={(e) => {\n                      setRole(e.target.value);\n                    }}\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-phone\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"number\"\n                    placeholder=\"Phone\"\n                    autoComplete=\"phone\"\n                    onChange={(e) => {\n                      setPhone(e.target.value);\n                    }}\n                  />\n                </CInputGroup>\n                <CFormGroup col>\n                  <CCol xs=\"12\" md=\"9\">\n                    <small className=\"text-muted\">Upload Image</small>\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"file-input\"\n                      onChange={(e) => {\n                        setImage(e.target.files[0]);\n                      }}\n                    />\n                  </CCol>\n                </CFormGroup>\n\n                <CButton color=\"success\" block onClick={onSubmitHandler}>\n                  Create new employee\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </CContainer>\n  );\n};\n\nexport default AddnewUser;\n"],"sourceRoot":""}